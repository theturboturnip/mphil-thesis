TODOs
1
1_25EmulationInvestigation/sub10_emu_cheri.tex- diagram
2
1_25EmulationInvestigation/sub10_emu_cheri.tex- appendix - the program flow for using modules
3
1_25EmulationInvestigation/sub20_emu_vec.tex- appx - Decision tree for operation decoding?
4
1_25EmulationInvestigation/sub20_emu_vec.tex- fix
5
1_30Software/content.tex- Figure page showing generated ASM for increment loop - see godbolt links MD
6
1_30Software/content.tex- example based on \url {https://github.com/riscv-non-isa/rvv-intrinsic-doc/blob/master/examples/rvv_memcpy.c}
7
1_30Software/content.tex- appendix based on \url {https://godbolt.org/z/zoWh9jq3o}
8
1_30Software/content.tex- Example https://godbolt.org/z/KPTW7rcvY
9
1_30Software/sub50_hyp.tex- Put the compatibility preprocessor stuff in the compiler appendix
10
2_1Appendix/cherirvv.tex- CHERI-RVV changes RVV instructions to use capabilities as address references in all places, no other behaviour changes
11
2_1Appendix/cherirvv.tex- CHERI-RVV treats capability out-of-bounds for an element as a synchronous exception, permission checks for a vector access are treated as a synchronous exception on element 0.
12
2_1Appendix/cherirvv.tex- The above means fault-only-first will silently swallow capability permission errors if element 0 is masked out.
13
2_1Appendix/cherirvv.tex- CHERI-RVV doesn't change CHERI behaviour
14
2_1Appendix/cherirvv.tex- Adds unit load/store 128, element width 128
15
2_1Appendix/artifacts.tex- artifacts appendix needs fixing
16
2_1Appendix/artifacts.tex- make sure to redact online copies
